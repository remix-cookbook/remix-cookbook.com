<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://remix-cookbook.com/</id>
    <title>Remix Cookbook</title>
    <updated>2022-01-15T14:56:30.880Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>Fabio Vedovelli</name>
        <email>vedovelli@gmail.com</email>
        <uri>https://twitter.com/vedovelli74</uri>
    </author>
    <link rel="alternate" href="https://remix-cookbook.com/"/>
    <link rel="self" href="https://remix-cookbook.com/atom.xml"/>
    <subtitle>Easy to follow recipes for the Remix.run framework</subtitle>
    <logo>https://remix-cookbook.com/img/social-banner.jpg</logo>
    <icon>https://remix-cookbook.com/favicon.ico</icon>
    <rights>Some right reserved</rights>
    <entry>
        <title type="html"><![CDATA[If Remix delivers HTML and doesn't need JS, why do we need React in the first place?]]></title>
        <id>0151df24-782b-4afa-9b5e-1995f394b4ba</id>
        <link href="https://remix-cookbook.com/if-remix-delivers-html-and-doesn-t-need-js-why-do-we-need-react-in-the-first-place"/>
        <updated>2022-01-15T07:14:39.000Z</updated>
        <content type="html"><![CDATA[
<p>One of the biggest Remix's selling points is progressive enhancement. It is notable you can build your application and delivery it to the browser without shipping any JavaScript. And still, it works as expected.</p>
<p>Of course, one cannot expect great interactive features, but the bare-bones functionality is there.</p>
<p><strong>Read the full article here</strong>: <a href="https://remix-cookbook.com/if-remix-delivers-html-and-doesn-t-need-js-why-do-we-need-react-in-the-first-place">remix-cookbook.com/if-remix-delivers-html-and-doesn-t-need-js-why-do-we-need-react-in-the-first-place</a></p>
      ]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Does Remix impose a project structure I have to follow?]]></title>
        <id>56ff3546-93ed-43ee-b249-464d7f7f69a3</id>
        <link href="https://remix-cookbook.com/does-remix-impose-a-project-structure-i-have-to-follow"/>
        <updated>2022-01-15T07:12:17.000Z</updated>
        <content type="html"><![CDATA[
<p>Aside from a few conventions you have to follow, Remix won’t stay in your way in terms of project organization. That’s nice but, at the same time, a double-sided knife.</p>
<p>If you are experienced building server-side applications with Node.js, you’re probable used to structure your project, and maybe you even have an excellent organization method in place. We suggest you keep your organization and fit Remix within it.</p>
<p><strong>Read the full article here</strong>: <a href="https://remix-cookbook.com/does-remix-impose-a-project-structure-i-have-to-follow">remix-cookbook.com/does-remix-impose-a-project-structure-i-have-to-follow</a></p>
      ]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Form and data validation with ZOD]]></title>
        <id>9dc48f3a-b500-4a82-a408-a561e4800ad8</id>
        <link href="https://remix-cookbook.com/form-and-data-validation-with-zod"/>
        <updated>2022-01-15T07:12:06.000Z</updated>
        <content type="html"><![CDATA[
<p>Remix brings us back to the olden days of web development by relying on web fundamentals. In practice, this means leaving it to the browser to do the job we’ve grown accustomed to do ourselves.</p>
<p>Form handling is a big part of web development and, while building single page applications, the developer has to keep track of user inputted data, sending it over to the server when it is in a good shape. Typically, data validation occurs while the user is interacting with the form.</p>
<p><strong>Read the full article here</strong>: <a href="https://remix-cookbook.com/form-and-data-validation-with-zod">remix-cookbook.com/form-and-data-validation-with-zod</a></p>
      ]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dark mode toggle with Remix Resource Routes and Dynamic CSS]]></title>
        <id>6c983cba-2692-4029-b502-5851f8e8533c</id>
        <link href="https://remix-cookbook.com/dark-mode-toggle-with-remix-resource-routes-and-dynamic-css"/>
        <updated>2022-01-15T07:11:59.000Z</updated>
        <content type="html"><![CDATA[
<p>This article will show you how to leverage Remix Resource Routes to deliver a dark mode toggle:</p>
<p>In a hurry?</p>
<p><strong>Read the full article here</strong>: <a href="https://remix-cookbook.com/dark-mode-toggle-with-remix-resource-routes-and-dynamic-css">remix-cookbook.com/dark-mode-toggle-with-remix-resource-routes-and-dynamic-css</a></p>
      ]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ensure loader is returning expected data to the React component]]></title>
        <id>aed93a1f-39fb-4fec-98b3-dba326faa939</id>
        <link href="https://remix-cookbook.com/ensure-loader-is-returning-expected-data-to-the-react-component"/>
        <updated>2022-01-15T07:11:32.000Z</updated>
        <content type="html"><![CDATA[
<p>⚠️ This article assumes you are building your app with Typescript</p>
<p>So we usually get data fetching started from our loader function, which is the very first piece of code that runs when a route is accessed.</p>
<p><strong>Read the full article here</strong>: <a href="https://remix-cookbook.com/ensure-loader-is-returning-expected-data-to-the-react-component">remix-cookbook.com/ensure-loader-is-returning-expected-data-to-the-react-component</a></p>
      ]]></content>
    </entry>
</feed>